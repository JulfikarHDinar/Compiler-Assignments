1: 
2: kw float id x1 op = num 3.125 sep ; sep ; sep ; 
3: 
4: kw double id f1 par ( par ( par ( par ( kw float id a sep , kw int kw int id x par ) 
5: brc { kw if par ( par ( id x op < id x1 par ) 
6: kw double id z sep ; 
7: kw else id z op = num 0.01 sep ; brc } brc } 
8: kw else kw return id z sep ; 
9: brc } 
10: 
11: kw int id main par ( kw void par ) par ) par ) par ) 
12: brc { brc { brc { brc { 
13: 
14: kw int kw int id n1 sep ; 
15: 
16: 
17: kw double id z sep ; 
18: id n1 op = num 25 op / num 85 op * num 874 sep ; 
19: id z op = id f1 par ( id n1 par ) sep ; 
20: 
21: kw for par ( sep ; sep ; par ) brc { 
22: kw if par ( id n1 op == num 54 par ) 
23: id n1 op = id n1 op * num 54 sep ; sep ; sep ; sep ; 
24: 
25: kw else kw if par ( par ( par ( id n1 op == num 100 par ) 
26: id n1 op = id n1 op * unkn 1.ty00 sep ; 
27: brc } 
28: 
29: brc } 